{"version":3,"sources":["app/api/httpRequest.ts","app/models/activity.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/chatStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/Navbar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItemLike.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","app/common/options/categoryOptions.ts","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListEmpty.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","app/common/form/ErrorMessage.tsx","app/common/modals/withModal.tsx","app/common/form/ValidatorMethod.ts","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/Home.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/scrollToTop.tsx","app/layout/NotFound.tsx","features/chat/Chat.tsx","features/profiles/ProfileHeader.tsx","features/profiles/photos/ModalPhotoConfirmation.tsx","features/profiles/photos/ModalPhoto.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/photos/ModalPhotoUpload.tsx","features/profiles/photos/ProfilePhotos.tsx","features/profiles/info/ModalProfileInfoForm.tsx","features/profiles/info/ProfileInfo.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePlaceholder.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","serviceWorker.ts","index.tsx"],"names":["axios","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","history","push","toast","status","includes","removeItem","info","method","data","errors","hasOwnProperty","httpRequest","queryStrings","url","this","baseUrl","get","params","then","res","id","activity","post","put","delete","user","username","predicate","profile","file","description","photoData","FormData","append","process","ActivityFormValues","title","category","date","time","city","venue","attendees","likes","Object","assign","combineDateAndTime","dateString","toISOString","split","timeString","Date","setActivityProps","isGoing","some","a","isHost","isLike","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","startConnection","activityId","hubConnection","start","console","log","state","invoke","catch","setTimeout","reaction","filters","keys","filterReload","Array","from","categoryFilter","values","startDate","activitiesGroup","groupActivitiesByDate","activityRegistry","activities","sortedActivities","sort","b","getTime","entries","reduce","URLSearchParams","offset","page","String","forEach","value","key","Math","ceil","activityCount","Map","emptyActivity","computed","action","clear","set","loadActivities","loadingInitial","getActivities","axiosParams","activitiesEnvelope","runInAction","UserStore","activitiesByDate","selectedActivity","toJS","getActivity","buttonSubmit","postActivity","attendee","comments","putActivity","event","submitting","buttonId","currentTarget","deleteActivity","loadingAttendance","attendActivity","unattendActivity","filter","like","likeActivity","unlikeActivity","HubConnectionBuilder","withUrl","accessTokenFactory","CommonStore","configureLogging","LogLevel","Information","build","on","comment","stop","postUser","setToken","getUser","registerUser","setItem","ChatStore","messages","concat","setMessage","setMessages","position","ProfileStore","activeTab","loadFollowings","followings","activeIndex","loadingProfile","getProfile","dateOfBirth","loadingActivities","listActivities","activitiesUser","upladingPhoto","uploadPhoto","photo","photos","isMain","deletingPhoto","deletePhoto","p","settingMainPhoto","setMainPhoto","find","updatingProfile","profileEdit","putProfile","followingProfile","follow","isFollowed","followerCount","unfollow","followingsList","listFollowings","profiles","configure","enforceActions","RootStoreContext","createContext","observer","RootStore","useContext","initializeEmptyForm","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","name","Button","onClick","positive","content","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","theme","createMuiTheme","overrides","MuiAvatar","root","display","marginBlock","background","border","height","width","fontSize","boxShadow","marginTop","Description","className","ThemeProvider","AvatarGroup","max","map","Avatar","length","Popup","l","List","size","Content","trigger","Label","basic","testo","attendeePeople","Icon","link","color","fitted","likePeople","ActivityListItem","host","x","Segment","Group","Header","textDecoration","format","Extra","clearing","dateGroup","divided","gender","setFilters","setStartDate","setCategoryFilter","vertical","attached","active","has","c","onChange","ActivityListEmpty","placeholder","Inline","primary","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","setPage","totalPages","useState","loadingNext","setLoadingNext","useEffect","nestedFunc","Grid","Column","pageStart","loadMore","hasMore","initialLoad","Loader","TextInput","input","type","meta","touched","Form","Field","autoComplete","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","rest","onBlur","onKeyDown","preventDefault","match","createActivity","editActivity","loadActivity","validate","combineValidators","isRequired","composeValidators","hasLengthGreaterThan","urlActivityId","setActivity","loading","setLoading","act","handleFinalFormSubmit","dateAndTime","newActivity","uuid","initialValues","onSubmit","render","handleSubmit","invalid","pristine","component","widths","floated","disabled","ErrorMessage","Message","statusText","flat","err","i","CheckError","withModal","Component","props","buttonName","Modal","isValidEmail","createValidator","test","login","setError","email","password","form","textAlign","register","userName","Home","marginBottom","LoadingComponent","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","padding","verticalAlign","createHubConnection","stopHubConnection","addComment","Comment","Author","Metadata","formatDistance","createdAt","Text","body","reset","labelPosition","secondary","relaxed","ribbon","ScrollToTop","pathname","useLocation","scrollTo","NotFound","chat","addMessage","messageSide","createAt","columns","Row","isCurrentUser","Statistic","label","followingCount","Divider","Reveal","animated","visible","hidden","modalOpen","setModalOpen","open","Actions","negative","closeIcon","Card","rounded","centered","Feed","Event","Summary","User","dropzoneStyles","borderColor","borderRadius","paddingTop","cursor","margin","dropzoneActive","PhotoWidgetDropzone","setFile","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","current","getCroppedCanvas","toBlob","blob","revokeObjectURL","handleUpload","minWidth","overflow","Tab","Pane","itemsPerRow","updateProfile","bio","initialView","phone","ProfileCard","extra","panes","menuItem","pane","loadActivitiesUser","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileContent","setActiveTab","menuPosition","ProfilePlaceholder","loadProfile","JsxElements","isLoggedIn","path","Boolean","location","hostname","dateFnsLocalizer","createBrowserHistory","ReactDOM","Helmet","charSet","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba8c1ac1.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport { history } from \"./../../index\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUserFormValues } from \"../models/user\";\r\nimport { IPhoto } from \"../models/profile\";\r\nimport { IProfile } from \"./../models/profile\";\r\nimport { IActivitiesEnvelope } from \"./../models/activity\";\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>((resolve) =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = \"bearer \" + token;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    history.push(\"/not-found\");\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  if (error.response.status === 404) {\r\n    history.push(\"/not-found\");\r\n  }\r\n  if (\r\n    error.response.status === 401 &&\r\n    error.response.headers[\"www-authenticate\"].includes(\r\n      'Bearer error=\"invalid_token\"'\r\n    )\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    error.response.status === 400 &&\r\n    error.response.config.method === \"get\" &&\r\n    error.response.data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/not-found\");\r\n  }\r\n  if (\r\n    (error.response.status === 400 &&\r\n      error.response.config.method === \"post\") ||\r\n    error.response.config.method === \"put\"\r\n  ) {\r\n    toast.error(\"Problem submitting the form\");\r\n  }\r\n  if (error.response.status === 500) {\r\n    history.push(\"/not-found\");\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nexport class httpRequest {\r\n  static baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  static getActivities(\r\n    queryStrings: URLSearchParams\r\n  ): Promise<IActivitiesEnvelope> {\r\n    let url = this.baseUrl + \"/activities\";\r\n    return axios\r\n      .get(url, { params: queryStrings })\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static getActivity(id: string): Promise<IActivity> {\r\n    let url = this.baseUrl + \"/activities/\" + id;\r\n    return axios\r\n      .get(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static postActivity(activity: IActivity) {\r\n    let url = this.baseUrl + \"/activities\";\r\n    return axios\r\n      .post(url, activity)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static putActivity(activity: IActivity) {\r\n    let url = this.baseUrl + \"/activities/\" + activity.id;\r\n    return axios\r\n      .put(url, activity)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static deleteActivity(id: string) {\r\n    let url = this.baseUrl + \"/activities/\" + id;\r\n    return axios\r\n      .delete(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static getUser() {\r\n    let url = this.baseUrl + \"/user\";\r\n    return axios\r\n      .get(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static postUser(user: IUserFormValues) {\r\n    let url = this.baseUrl + \"/user/login\";\r\n    return axios\r\n      .post(url, user)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static registerUser(user: IUserFormValues) {\r\n    let url = this.baseUrl + \"/user/register\";\r\n    return axios\r\n      .post(url, user)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static attendActivity(id: string) {\r\n    let url = this.baseUrl + \"/activities/\" + id + \"/attend\";\r\n    return axios\r\n      .post(url, {})\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static unattendActivity(id: string) {\r\n    let url = this.baseUrl + \"/activities/\" + id + \"/unattend\";\r\n    return axios\r\n      .delete(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static likeActivity(id: string) {\r\n    let url = this.baseUrl + \"/activities/\" + id + \"/like\";\r\n    return axios\r\n      .post(url, {})\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static unlikeActivity(id: string) {\r\n    let url = this.baseUrl + \"/activities/\" + id + \"/unlike\";\r\n    return axios\r\n      .delete(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static getProfile(username: string) {\r\n    let url = this.baseUrl + \"/profiles/\" + username;\r\n    return axios\r\n      .get(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static listActivities(username: string, predicate?: string) {\r\n    let url =\r\n      this.baseUrl +\r\n      \"/profiles/\" +\r\n      username +\r\n      \"/activities?predicate=\" +\r\n      predicate;\r\n    return axios\r\n      .get(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static putProfile(profile: IProfile) {\r\n    let url = this.baseUrl + \"/profiles\";\r\n    return axios\r\n      .put(url, profile)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static uploadPhoto(file: Blob, description: string): Promise<IPhoto> {\r\n    let photoData = new FormData();\r\n    photoData.append(\"File\", file);\r\n    if (description) photoData.append(\"description\", description);\r\n    let url = this.baseUrl + \"/photos\";\r\n    return axios\r\n      .post(url, photoData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static setMainPhoto(id: string) {\r\n    let url = this.baseUrl + \"/photos/\" + id + \"/setMain\";\r\n    return axios\r\n      .post(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static deletePhoto(id: string) {\r\n    let url = this.baseUrl + \"/photos/\" + id;\r\n    return axios\r\n      .delete(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static follow(username: string) {\r\n    let url = this.baseUrl + \"/profiles/\" + username + \"/follow\";\r\n    return axios\r\n      .post(url, {})\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static unfollow(username: string) {\r\n    let url = this.baseUrl + \"/profiles/\" + username + \"/follow\";\r\n    return axios\r\n      .delete(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  static listFollowings(username: string, predicate: string) {\r\n    let url =\r\n      this.baseUrl + \"/profiles/\" + username + \"/follow?predicate=\" + predicate;\r\n    return axios\r\n      .get(url)\r\n      // .then(sleep(1000))\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n  }\r\n}\r\n","export interface IActivitiesEnvelope {\r\n  activities: IActivity[];\r\n  activityCount: number;\r\n}\r\n\r\nexport interface IActivity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  date: Date;\r\n  city: string;\r\n  venue: string;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  isLike: boolean;\r\n  attendees: IAttendee[];\r\n  likes: ILike[];\r\n  comments: IComment[];\r\n}\r\n\r\nexport interface IActivityForm extends Partial<IActivity> {\r\n  time?: Date;\r\n  attendees: IAttendee[];\r\n  likes: ILike[];\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  description: string = \"\";\r\n  category: string = \"\";\r\n  date?: Date = undefined;\r\n  time?: Date = undefined;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n  attendees: IAttendee[] = [];\r\n  likes: ILike[] = [];\r\n\r\n  // NON USATO\r\n  constructor(activity?: IActivityForm) {\r\n    if (activity?.date) {\r\n      activity.time = activity.date;\r\n    }\r\n    Object.assign(this, activity);\r\n  }\r\n}\r\n\r\nexport interface IAttendee {\r\n  username: string;\r\n  displayName: string;\r\n  image: string;\r\n  isHost: boolean;\r\n  isFollowed?: boolean; \r\n}\r\n\r\nexport interface ILike {\r\n  username: string;\r\n  displayName: string;\r\n  image: string;\r\n}\r\n\r\nexport interface IComment{\r\n  id: string; \r\n  createdAt: Date; \r\n  body:string; \r\n  username: string; \r\n  displayName: string; \r\n  image: string;\r\n}","import { IActivity, IAttendee, ILike } from \"../../models/activity\";\nimport { IUser } from \"../../models/user\";\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  // const timeString = time.getHours() + \":\" + time.getMinutes() + \":00\";\n\n  // const year = date.getFullYear();\n  // const month = date.getMonth() + 1;\n  // const day = date.getDate();\n  // const dateString = `${year}-${month}-${day}`;\n  const dateString = date.toISOString().split('T')[0]; \n  const timeString = time.toISOString().split('T')[1]; \n\n  return new Date(dateString + \" \" + timeString);\n};\n\nexport const setActivityProps = (\n  activity: IActivity,\n  user: IUser\n): IActivity => {\n  activity.date = new Date(activity.date);\n  activity.isGoing = activity.attendees.some(\n    (a) => a.username === user?.username\n  );\n  activity.isHost = activity.attendees.some(\n    (a) => a.username === user?.username && a.isHost\n  );\n  activity.isLike = activity.likes.some((a) => a.username === user?.username);\n  return activity;\n};\n\nexport const createAttendee = (user: IUser): IAttendee => {\n  return {\n    displayName: user.displayName,\n    isHost: false,\n    username: user.username,\n    image: user.image!,\n  };\n};\n\nexport const createLike = (user: IUser): ILike => {\n  return {\n    displayName: user.displayName,\n    username: user.username,\n    image: user.image!,\n  };\n};\n","import { observable, action, runInAction, computed, reaction, toJS } from \"mobx\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { IActivity, IActivityForm, IComment } from \"../models/activity\";\r\nimport { httpRequest } from \"../api/httpRequest\";\r\nimport { ActivityFormValues } from \"./../models/activity\";\r\nimport { history } from \"./../../index\";\r\nimport RootStore from \"./rootStore\";\r\nimport { setActivityProps, createLike } from \"../common/util/util\";\r\nimport { createAttendee } from \"./../common/util/util\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\n\r\nconst LIMIT = 3;\r\n\r\nexport default class ActivityStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.filters.keys(),\r\n      () => {\r\n        this.filterReload();\r\n      }\r\n    );\r\n\r\n    reaction(\r\n      () => Array.from(this.categoryFilter.values()),\r\n      () => {\r\n        this.filterReload();\r\n      }\r\n    );\r\n\r\n    reaction(\r\n      () => Array.from(this.startDate.values()),\r\n      () => {\r\n        this.filterReload();\r\n      }\r\n    );\r\n  }\r\n\r\n  //#region OBSERVABLE\r\n  @observable emptyActivity = new ActivityFormValues();\r\n  @observable activityRegistry = new Map();\r\n  @observable activitiesGroup: any[] = [];\r\n  @observable selectedActivity: IActivityForm = this.emptyActivity;\r\n  @observable loadingInitial: boolean = false;\r\n  @observable submitting: boolean = false;\r\n  @observable buttonId: string = \"\";\r\n  @observable buttonSubmit: boolean = false;\r\n  @observable loadingAttendance: boolean = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n  @observable activityCount = 0;\r\n  @observable page = 0;\r\n  @observable filters = new Map();\r\n  @observable categoryFilter = new Map();\r\n  @observable startDate = new Map();\r\n  //#endregion\r\n\r\n  //#region FILTER ACTIVITIES\r\n  @computed get axiosParams() {\r\n    const queryStrings = new URLSearchParams();\r\n    var offset = this.page ? this.page * LIMIT : 0;\r\n    queryStrings.append(\"limit\", String(LIMIT));\r\n    queryStrings.append(\"offset\", String(offset));\r\n\r\n    this.filters.forEach((value, key) => {\r\n      queryStrings.append(key, value);\r\n    });\r\n\r\n    this.categoryFilter.forEach((value, key) => {\r\n      queryStrings.append(key, value);\r\n    });\r\n\r\n    this.startDate.forEach((value, key) => {\r\n      queryStrings.append(key, value.toISOString());\r\n    });\r\n\r\n    return queryStrings;\r\n  }\r\n\r\n  @action setFilters = (key: string, value: string) => {\r\n    this.filters.clear();\r\n    if (key !== \"all\") {\r\n      this.filters.set(key, value);\r\n    }\r\n  };\r\n\r\n  @action setCategoryFilter = (key: string, value: string) => {\r\n    this.categoryFilter.clear();\r\n    if (key !== \"all\") {\r\n      this.categoryFilter.set(key, value);\r\n    }\r\n  };\r\n\r\n  @action setStartDate = (key: string, value: Date) => {\r\n    this.startDate.clear();\r\n    this.startDate.set(key, value);\r\n  };\r\n\r\n  @action filterReload = () => {\r\n    this.page = 0;\r\n    this.activityRegistry.clear();\r\n    this.activitiesGroup = [];\r\n    this.loadActivities();\r\n  };\r\n  //#endregion\r\n\r\n  //#region PAGING ACTIVITIES\r\n  @computed get totalPages() {\r\n    return Math.ceil(this.activityCount / LIMIT);\r\n  }\r\n\r\n  @action setPage = (page: number) => {\r\n    this.page = page;\r\n  };\r\n  //#endregion\r\n\r\n  // #region FEED ACTIVITIES\r\n  @action loadActivities = async () => {\r\n    try {\r\n      this.loadingInitial = true;\r\n      const activitiesEnvelope = await httpRequest.getActivities(\r\n        this.axiosParams\r\n      );\r\n      const { activities, activityCount } = activitiesEnvelope;\r\n      runInAction(\"loading activities\", () => {\r\n        activities.forEach((activity: IActivity) => {\r\n          setActivityProps(activity, this.rootStore.UserStore.user!);\r\n          this.activityRegistry.set(activity.id, activity);\r\n        });\r\n        this.activityCount = activityCount;\r\n        this.activitiesByDate();\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingInitial = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  activitiesByDate() {\r\n    this.activitiesGroup = this.groupActivitiesByDate(\r\n      Array.from(this.activityRegistry.values())\r\n    );\r\n  };\r\n\r\n  groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date.getTime() - b.date.getTime()\r\n    );\r\n    return Object.entries(\r\n      sortedActivities.reduce((activities, activity) => {\r\n        const date = activity.date.toISOString().split(\"T\")[0];\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: IActivity[] })\r\n    );\r\n  }\r\n  // #endregion\r\n\r\n  // #region SINGLE ACTIVITY\r\n  @action loadActivity = async (id: string) => {\r\n    // Check into the registry\r\n    let activity = this.activityRegistry.get(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return toJS(activity);\r\n    } else if (this.selectedActivity.id === id) {\r\n      // Check the selected activity\r\n      return toJS(this.selectedActivity);\r\n    } else {\r\n      // Query the database via API\r\n      try {\r\n        activity = await httpRequest.getActivity(id);\r\n        runInAction(\"getting activity\", () => {\r\n          setActivityProps(activity, this.rootStore.UserStore.user!);\r\n          this.selectedActivity = activity;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  // #region FORM ACTIVITY: CREATE, EDIT, DELETE\r\n  @action initializeEmptyForm = () => {\r\n    this.selectedActivity = this.emptyActivity;\r\n  };\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.buttonSubmit = true;\r\n    try {\r\n      await httpRequest.postActivity(activity);\r\n      runInAction(\"update registry\", () => {\r\n        const attendee = createAttendee(this.rootStore.UserStore.user!);\r\n        attendee.isHost = true;\r\n        let attendees = [];\r\n        attendees.push(attendee);\r\n        activity.attendees = attendees;\r\n        activity.isHost = true;\r\n        activity.isGoing = true;\r\n        activity.comments = [];\r\n        activity.likes = [];\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.selectedActivity = activity;\r\n        this.buttonSubmit = false;\r\n      });\r\n      history.push(\"/activities/\" + activity.id);\r\n    } catch (error) {\r\n      runInAction(\"create activity error\", () => {\r\n        this.buttonSubmit = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action editActivity = async (activity: IActivity) => {\r\n    try {\r\n      this.buttonSubmit = true;\r\n      await httpRequest.putActivity(activity);\r\n      runInAction(\"edit activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.selectedActivity = activity;\r\n        this.buttonSubmit = false;\r\n      });\r\n      history.push(\"/activities/\" + activity.id);\r\n    } catch (error) {\r\n      runInAction(\"edit activity error\", () => {\r\n        this.buttonSubmit = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    activity: IActivity\r\n  ) => {\r\n    this.submitting = true;\r\n    this.buttonId = event.currentTarget.title;\r\n    try {\r\n      await httpRequest.deleteActivity(activity.id);\r\n      runInAction(\"delete activity\", () => {\r\n        this.activityRegistry.delete(activity.id);\r\n        this.submitting = false;\r\n        this.buttonId = \"\";\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"delete activity error\", () => {\r\n        this.submitting = false;\r\n        this.buttonId = \"\";\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  // #region ATTEND ACTIVITY\r\n  @action attendActivity = async () => {\r\n    const attendee = createAttendee(this.rootStore.UserStore.user!);\r\n    try {\r\n      this.loadingAttendance = true;\r\n      await httpRequest.attendActivity(this.selectedActivity.id!);\r\n      runInAction(() => {\r\n        if (this.selectedActivity) {\r\n          this.selectedActivity.attendees.push(attendee);\r\n          this.selectedActivity.isGoing = true;\r\n          this.activityRegistry.set(\r\n            this.selectedActivity.id,\r\n            this.selectedActivity\r\n          );\r\n          this.loadingAttendance = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingAttendance = false;\r\n      });\r\n      toast.error(\"Problem signing up to activity\");\r\n    }\r\n  };\r\n\r\n  @action unattendActivity = async () => {\r\n    try {\r\n      this.loadingAttendance = true;\r\n      await httpRequest.unattendActivity(this.selectedActivity.id!);\r\n      runInAction(() => {\r\n        if (this.selectedActivity) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees.filter(\r\n            (a) => a.username !== this.rootStore.UserStore.user!.username\r\n          );\r\n          this.selectedActivity.isGoing = false;\r\n          this.activityRegistry.set(\r\n            this.selectedActivity.id,\r\n            this.selectedActivity\r\n          );\r\n          this.loadingAttendance = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingAttendance = false;\r\n      });\r\n      toast.error(\"Problem cancelling attendance to activity\");\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  // #region LIKE ACTIVITY\r\n  @action likeActivity = async (id: string) => {\r\n    const like = createLike(this.rootStore.UserStore.user!);\r\n    try {\r\n      runInAction(() => {\r\n        this.selectedActivity = this.activityRegistry.get(id);\r\n        if (this.selectedActivity) {\r\n          this.selectedActivity.likes.push(like);\r\n          this.selectedActivity.isLike = true;\r\n          this.activityRegistry.set(\r\n            this.selectedActivity.id,\r\n            this.selectedActivity\r\n          );\r\n        }\r\n      });\r\n      await httpRequest.likeActivity(id);\r\n    } catch (error) {\r\n      runInAction(() => {});\r\n      toast.error(\"Problem liking the activity\");\r\n    }\r\n  };\r\n\r\n  @action unlikeActivity = async (id: string) => {\r\n    try {\r\n      runInAction(() => {\r\n        this.selectedActivity = this.activityRegistry.get(id);\r\n        if (this.selectedActivity) {\r\n          this.selectedActivity.likes = this.selectedActivity.likes.filter(\r\n            (a) => a.username !== this.rootStore.UserStore.user!.username\r\n          );\r\n          this.selectedActivity.isLike = false;\r\n          this.activityRegistry.set(\r\n            this.selectedActivity.id,\r\n            this.selectedActivity\r\n          );\r\n        }\r\n      });\r\n      await httpRequest.unlikeActivity(id);\r\n    } catch (error) {\r\n      runInAction(() => {});\r\n      toast.error(\"Problem cancelling like to activity\");\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  // #region CHAT IN THE ACTIVITY: CONNECTION AND COMMENT\r\n  @action createHubConnection = async (activityId: string) => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_COMMENT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.CommonStore.token!,\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.startConnection(activityId);\r\n\r\n    this.hubConnection.on(\"ReceiveComment\", (comment: IComment) => {\r\n      runInAction(() => {\r\n        this.selectedActivity.comments?.push(comment);\r\n      });\r\n    });\r\n\r\n    // this.hubConnection.on(\"Send\", (message: string) => {\r\n    //   toast.info(message, { position: \"top-right\" });\r\n    // });\r\n  };\r\n\r\n  startConnection = async (activityId: string) => {\r\n    this.hubConnection\r\n      ?.start()\r\n      .then(() => console.log(this.hubConnection?.state))\r\n      .then(async () => {\r\n        await this.hubConnection!.invoke(\"AddToGroup\", activityId);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error establishing connection\" + error);\r\n        setTimeout(() => this.startConnection(activityId), 5000);\r\n      });\r\n  };\r\n\r\n  @action stopHubConnection = (activityId: string) => {\r\n    this.hubConnection!.invoke(\"RemoveFromGroup\", activityId)\r\n      .then(() => {\r\n        this.hubConnection!.stop();\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  @action addComment = async (values: any) => {\r\n    values.activityId = this.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection!.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //#endregion\r\n}\r\n","import { observable, action, runInAction, computed } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { httpRequest } from \"./../api/httpRequest\";\r\nimport RootStore from \"./rootStore\";\r\nimport { history } from \"./../../index\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      let user = await httpRequest.postUser(values);\r\n      runInAction(\"updating observable\", () => {\r\n        this.user = user;\r\n        this.rootStore.CommonStore.setToken(user.token);\r\n      });\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action logout = () => {\r\n    this.rootStore.CommonStore.setToken(null);\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  @action getUser = async () => {\r\n    try {\r\n      const user = await httpRequest.getUser();\r\n      runInAction(() => {\r\n        this.user = user;\r\n        this.rootStore.CommonStore.setToken(user.token);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action register = async (values: IUserFormValues) => {\r\n    try {\r\n      let user = await httpRequest.registerUser(values);\r\n      runInAction(\"updating observable\", () => {\r\n        this.user = user;\r\n        this.rootStore.CommonStore.setToken(user.token);\r\n      });\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import RootStore from \"./rootStore\";\r\nimport { observable, action, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    // Primo argomento di reaction è a cosa dobbiamo reagire e si passa come una funzione\r\n    // secondo argomento è l'effetto\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable token: string | null = window.localStorage.getItem(\"jwt\");\r\n\r\n  @action setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n}\r\n","import RootStore from \"./rootStore\";\r\nimport { observable, action } from \"mobx\";\r\nimport { IMessage } from \"../models/message\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ChatStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable messages: IMessage[] = [];\r\n\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n\r\n  @action setMessage = (message: IMessage) => {\r\n    this.messages.push(message);\r\n  };\r\n\r\n  @action setMessages = (messages: IMessage[]) => {\r\n    this.messages = this.messages.concat(messages);\r\n  };\r\n\r\n  @action createHubConnection = async () => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.CommonStore.token!,\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.startConnection();\r\n\r\n    this.hubConnection.on(\"ReceiveMessage\", (message: IMessage) => {\r\n      this.setMessage(message);\r\n    });\r\n\r\n    this.hubConnection.on(\"ReceiveAllMessages\", (messages: IMessage[]) => {\r\n      this.setMessages(messages);\r\n    });\r\n\r\n    this.hubConnection.on(\"Send\", (message: string) => {\r\n      toast.info(message, { position: \"top-right\" });\r\n    });\r\n  };\r\n\r\n  startConnection = async () => {\r\n    this.hubConnection\r\n      ?.start()\r\n      .then(() => console.log(this.hubConnection?.state))\r\n      .then(async () => {\r\n        await this.hubConnection!.invoke(\"SendAllMessages\");\r\n        await this.hubConnection!.invoke(\"AddToGroup\", \"GruppoLavoro\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error establishing connection\" + error);\r\n        setTimeout(() => this.startConnection(), 5000);\r\n      });\r\n  };\r\n\r\n  @action stopHubConnection = () => {\r\n    this.hubConnection!.invoke(\"RemoveFromGroup\", \"GruppoLavoro\")\r\n      .then(() => {\r\n        this.hubConnection!.stop();\r\n        console.log(this.messages);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  @action addMessage = async (values: any) => {\r\n    try {\r\n      await this.hubConnection!.invoke(\"SendMessage\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import RootStore from \"./rootStore\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport { IProfile, IPhoto, IActivityUser } from \"../models/profile\";\r\nimport { httpRequest } from \"./../api/httpRequest\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3) {\r\n          this.loadFollowings(\"follower\");\r\n        } else if (activeTab === 4) {\r\n          this.loadFollowings(\"following\");\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable followings: IProfile[] = [];\r\n  @observable loadingProfile = false;\r\n  @observable upladingPhoto = false;\r\n  @observable settingMainPhoto = false;\r\n  @observable deletingPhoto = false;\r\n  @observable updatingProfile = false;\r\n  @observable followingProfile = false;\r\n  @observable followingsList = false;\r\n  @observable activeTab: number = 0;\r\n  @observable activitiesUser: IActivityUser[] = [];\r\n  @observable loadingActivities = false; \r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.UserStore.user && this.profile) {\r\n      return this.rootStore.UserStore.user.username === this.profile.username;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action setActiveTab = (activeIndex: number) => {\r\n    this.activeTab = activeIndex;\r\n  };\r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await httpRequest.getProfile(username);\r\n      runInAction(() => {\r\n        if (typeof profile.dateOfBirth === \"string\")\r\n          profile.dateOfBirth = new Date(profile.dateOfBirth);\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action loadActivitiesUser = async (username: string, predicate?: string) =>{\r\n    this.loadingActivities = true; \r\n    try{\r\n      const activities = await httpRequest.listActivities(username, predicate!);\r\n      runInAction(()=>{\r\n        this.activitiesUser = activities; \r\n        this.loadingActivities = false;\r\n      })\r\n    }catch(error){\r\n      toast.error(\"Problem loading activities\")\r\n      runInAction(()=>{\r\n        this.loadingActivities = false\r\n      })\r\n    }\r\n  }\r\n\r\n  @action uploadPhoto = async (file: Blob, description: string) => {\r\n    this.upladingPhoto = true;\r\n    try {\r\n      const photo = await httpRequest.uploadPhoto(file, description);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && this.rootStore.UserStore.user) {\r\n            this.rootStore.UserStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.upladingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Problem uploading the photo\");\r\n      runInAction(() => {\r\n        this.upladingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.deletingPhoto = true;\r\n    try {\r\n      await httpRequest.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile?.photos) {\r\n          this.profile.photos = this.profile.photos.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n        }\r\n        this.deletingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting the photo\");\r\n      runInAction(() => {\r\n        this.deletingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setMainPhoto = async (photo: IPhoto) => {\r\n    this.settingMainPhoto = true;\r\n    try {\r\n      await httpRequest.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        this.rootStore.UserStore.user!.image = photo.url;\r\n        this.profile!.photos.find((p) => p.isMain)!.isMain = false;\r\n        this.profile!.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.settingMainPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.settingMainPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: IProfile) => {\r\n    this.updatingProfile = true;\r\n    try {\r\n      var profileEdit = { ...profile };\r\n      delete profile.photos;\r\n      delete profile.image;\r\n      delete profile.username;\r\n      await httpRequest.putProfile(profile);\r\n      runInAction(() => {\r\n        this.profile = profileEdit;\r\n        this.rootStore.UserStore.user!.displayName = profileEdit.displayName;\r\n        this.updatingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.updatingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action follow = async (username: string) => {\r\n    this.followingProfile = true;\r\n    try {\r\n      await httpRequest.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.isFollowed = true;\r\n        this.profile!.followerCount++;\r\n        this.followingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem following user\");\r\n      runInAction(() => {\r\n        this.followingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unfollow = async (username: string) => {\r\n    this.followingProfile = true;\r\n    try {\r\n      await httpRequest.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.isFollowed = false;\r\n        this.profile!.followerCount--;\r\n        this.followingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem unfollowing user\");\r\n      runInAction(() => {\r\n        this.followingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.followingsList = true;\r\n    try {\r\n      const profiles = await httpRequest.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = profiles;\r\n        this.followingsList = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem loading followings\");\r\n      runInAction(() => {\r\n        this.followingsList = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import ActivityStore from \"./activityStore\";\r\nimport UserStore from \"./userStore\";\r\nimport { createContext } from \"react\";\r\nimport { configure } from \"mobx\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ChatStore from \"./chatStore\";\r\nimport ProfileStore from \"./profileStore\";\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport default class RootStore {\r\n  ActivityStore: ActivityStore;\r\n  UserStore: UserStore;\r\n  CommonStore: CommonStore;\r\n  ChatStore: ChatStore;\r\n  ProfileStore: ProfileStore;\r\n\r\n  constructor() {\r\n    this.ActivityStore = new ActivityStore(this);\r\n    this.UserStore = new UserStore(this);\r\n    this.CommonStore = new CommonStore(this);\r\n    this.ChatStore = new ChatStore(this);\r\n    this.ProfileStore = new ProfileStore(this);\r\n  }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import React, { useContext } from \"react\";\r\nimport { Button, Menu, Container, Dropdown, Image } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { initializeEmptyForm } = RootStore.ActivityStore;\r\n  const { user, logout } = RootStore.UserStore;\r\n\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img\r\n            src=\"/assets/logoAppen.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />Appen\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item name=\"Chat\" as={NavLink} to=\"/chat\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            onClick={initializeEmptyForm}\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image\r\n              avatar\r\n              spaced=\"right\"\r\n              src={user.image || \"/assets/user.png\"}\r\n            />\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={'/profile/'+user.username}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(Navbar);\r\n","import React from \"react\";\r\nimport { List, Popup, Label, Item } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport \"./Style.css\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiAvatar: {\r\n        root: {\r\n          display: \"flex\",\r\n          marginBlock: \"true\",\r\n          background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n          border: 0,\r\n          height: 33,\r\n          width: 33,\r\n          fontSize: 15,\r\n          boxShadow: \"0 1px 1px 1px rgba(255, 105, 135, .1)\",\r\n          marginTop: 2,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const attendeePeople = () => {\r\n    var testo = \"\";\r\n    switch (attendees.length) {\r\n      case 0:\r\n        testo = \"\";\r\n        break;\r\n      case 1:\r\n        testo = attendees[0].displayName + \" partecipa a questo evento\";\r\n        break;\r\n      case 2:\r\n        testo =\r\n          attendees[0].displayName +\r\n          \" e \" +\r\n          attendees[1].displayName +\r\n          \" partecipano a questo evento\";\r\n        break;\r\n      case 3:\r\n        testo =\r\n          attendees[0].displayName +\r\n          \", \" +\r\n          attendees[1].displayName +\r\n          \" e \" +\r\n          attendees[2].displayName +\r\n          \" partecipano a questo evento\";\r\n        break;\r\n      default:\r\n        testo =\r\n          attendees[0].displayName +\r\n          \", \" +\r\n          attendees[1].displayName +\r\n          \", \" +\r\n          attendees[2].displayName +\r\n          \" e altri \" +\r\n          (attendees.length - 3) +\r\n          \" partecipano a questo evento\";\r\n        break;\r\n    }\r\n    return testo;\r\n  };\r\n\r\n  return (\r\n    <Item.Description className=\"attendeeWidget\">\r\n      <ThemeProvider theme={theme}>\r\n        <AvatarGroup max={4}>\r\n          {attendees.map((attendee) => (\r\n            <Avatar\r\n              className=\"AttendeeItem\"\r\n              key={attendee.username}\r\n              alt={attendee.displayName}\r\n              src={attendee.image || \"/assets/user.png\"}\r\n            />\r\n          ))}\r\n        </AvatarGroup>\r\n      </ThemeProvider>\r\n      {attendees.length > 0 && (\r\n        <Popup\r\n          content={attendees.map((l) => (\r\n            <List size=\"small\" key={l.displayName}>\r\n              <List.Item>\r\n                <List.Content>{l.displayName}</List.Content>\r\n              </List.Item>\r\n            </List>\r\n          ))}\r\n          trigger={<Label basic>{attendeePeople()} </Label>}\r\n        />\r\n      )}\r\n    </Item.Description>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityListItemAttendees);\r\n","import React, { useContext } from \"react\";\r\nimport { List, Popup, Icon, Label, Item } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport \"./Style.css\";\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n}\r\n\r\nconst ActivityListItemLike: React.FC<IProps> = ({ activity }) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { likeActivity, unlikeActivity } = RootStore.ActivityStore;\r\n\r\n  const like = async () => {\r\n    if (!activity.isLike) {\r\n      await likeActivity(activity.id);\r\n    } else {\r\n      await unlikeActivity(activity.id);\r\n    }\r\n  };\r\n\r\n  const likePeople = () => {\r\n    var testo = \"\";\r\n    switch (activity.likes.length) {\r\n      case 0:\r\n        testo = \"\";\r\n        break;\r\n      case 1:\r\n        testo = \"A \" + activity.likes[0].displayName + \" piace questo evento\";\r\n        break;\r\n      case 2:\r\n        testo =\r\n          \"A \" +\r\n          activity.likes[0].displayName +\r\n          \" e \" +\r\n          activity.likes[1].displayName +\r\n          \" piace questo evento\";\r\n        break;\r\n      case 3:\r\n        testo =\r\n          \"A \" +\r\n          activity.likes[0].displayName +\r\n          \", \" +\r\n          activity.likes[1].displayName +\r\n          \" e \" +\r\n          activity.likes[2].displayName +\r\n          \" piace questo evento\";\r\n        break;\r\n      default:\r\n        testo =\r\n          \"A \" +\r\n          activity.likes[0].displayName +\r\n          \", \" +\r\n          activity.likes[1].displayName +\r\n          \", \" +\r\n          activity.likes[2].displayName +\r\n          \" e altri \" +\r\n          (activity.likes.length - 3) +\r\n          \" piace questo evento\";\r\n        break;\r\n    }\r\n    return testo;\r\n  };\r\n\r\n  return (\r\n    <Item.Description className=\"likeWidget\">\r\n      <button onClick={like}>\r\n        {activity.isLike && (\r\n          <Icon\r\n            link={true}\r\n            color=\"red\"\r\n            size=\"large\"\r\n            name=\"heart\"\r\n            fitted={true}\r\n          ></Icon>\r\n        )}\r\n        {!activity.isLike && (\r\n          <Icon\r\n            link={true}\r\n            color=\"red\"\r\n            size=\"large\"\r\n            name=\"heart outline\"\r\n            fitted={true}\r\n          ></Icon>\r\n        )}\r\n      </button>\r\n      {activity.likes.length > 0 && (\r\n        <Popup\r\n          content={activity.likes.map((l) => (\r\n            <List size=\"small\" key={l.displayName}>\r\n              <List.Item>\r\n                <List.Content>{l.displayName}</List.Content>\r\n              </List.Item>\r\n            </List>\r\n          ))}\r\n          trigger={<Label basic>{likePeople()} </Label>}\r\n        />\r\n      )}\r\n    </Item.Description>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityListItemLike);\r\n","import React from \"react\";\r\nimport { Item, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAttendees from \"./ActivityListItemAttendees\";\r\nimport ActivityListItemLike from \"./ActivityListItemLike\";\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n}\r\n\r\nexport const ActivityListItem: React.FC<IProps> = ({ activity }) => {\r\n  const host = activity.attendees.filter((x) => x.isHost)[0];\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item key={activity.id}>\r\n            <Item.Content>\r\n              <Item.Header\r\n                as={Link}\r\n                to={\"/activities/\" + activity.id}\r\n                style={{ color: \"#427fe1\", textDecoration: 'underline'}}\r\n              >\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                <Icon name=\"marker\" />\r\n                {activity.venue + \", \" + activity.city }\r\n                <Icon name=\"clock\" />\r\n                {format(activity.date, \"k:mm\")}\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                Created by\r\n                <Link to={\"/profile/\" + host.username}>\r\n                  {\" \"}\r\n                  {host.displayName}\r\n                </Link>\r\n              </Item.Extra>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"orange\"\r\n                    content=\"You are hosting this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"green\"\r\n                    content=\"You are going to this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n            <Item.Image size=\"tiny\" src={host.image || \"/assets/user.png\"} />\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment clearing>\r\n        <ActivityListItemAttendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <ActivityListItemLike activity={activity} />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ActivityListItem } from \"./ActivityListItem\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { activitiesGroup } = RootStore.ActivityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      {activitiesGroup.map(([dateGroup, activities]) => (\r\n        <Fragment key={dateGroup}>\r\n          <Label size=\"large\" color=\"blue\">\r\n            {format(dateGroup, \"eeee do MMMM\")}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {activities.map((activity: any) => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default observer(ActivityList);\r\n","export const category = [\n  { key: \"drinks\", text: \"Drinks   🍹\", value: \"Drinks\" },\n  { key: \"culture\", text: \"Culture   🎭\", value: \"Culture\" },\n  { key: \"film\", text: \"Film   🎬\", value: \"Film\" },\n  { key: \"food\", text: \"Food   🍕\", value: \"Food\" },\n  { key: \"music\", text: \"Music   🔊\", value: \"Music\" },\n  { key: \"travel\", text: \"Travel   🌎\", value: \"Travel\" },\n];\n\nexport const gender = [\n  { key: \"male\", text: \"Male\", value: \"Male\" },\n  { key: \"female\", text: \"Female\", value: \"Female\" },\n];\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Menu, Header } from \"semantic-ui-react\";\r\nimport { Calendar } from \"react-widgets\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { category } from \"../../../app/common/options/categoryOptions\";\r\n\r\nconst ActivityFilters = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    filters,\r\n    setFilters,\r\n    startDate,\r\n    setStartDate,\r\n    categoryFilter,\r\n    setCategoryFilter,\r\n  } = RootStore.ActivityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={\"large\"} style={{ width: \"100%\", marginTop: 50 }}>\r\n        <Header icon={\"filter\"} attached color={\"teal\"} content={\"Filters\"} />\r\n        <Menu.Item\r\n          active={filters.size === 0}\r\n          onClick={() => setFilters(\"all\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"all\"}\r\n          content={\"All Activities\"}\r\n        />\r\n        <Menu.Item\r\n          active={filters.has(\"isGoing\")}\r\n          onClick={() => setFilters(\"isGoing\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"username\"}\r\n          content={\"I'm Going\"}\r\n        />\r\n        <Menu.Item\r\n          active={filters.has(\"isHost\")}\r\n          onClick={() => setFilters(\"isHost\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"host\"}\r\n          content={\"I'm hosting\"}\r\n        />\r\n      </Menu>\r\n\r\n      <Menu vertical size={\"large\"} style={{ width: \"100%\" }}>\r\n        <Header\r\n          icon={\"tag\"}\r\n          attached\r\n          color={\"teal\"}\r\n          content={\"Select category\"}\r\n        />\r\n        <Menu.Item\r\n          active={categoryFilter.size === 0}\r\n          onClick={() => setCategoryFilter(\"all\", \"all\")}\r\n          color={\"blue\"}\r\n          name={\"all\"}\r\n          content={\"All categories\"}\r\n        />\r\n        {category.map((c) => (\r\n          <Menu.Item\r\n            key={c.key}\r\n            active={\r\n              categoryFilter.has(\"category\") &&\r\n              categoryFilter.get(\"category\") === c.value\r\n            }\r\n            onClick={() => setCategoryFilter(\"category\", c.value)}\r\n            color={\"blue\"}\r\n            name={c.key}\r\n            content={c.text}\r\n          />\r\n        ))}\r\n      </Menu>\r\n\r\n      <Header\r\n        icon={\"calendar\"}\r\n        attached\r\n        color={\"teal\"}\r\n        content={\"Select Date\"}\r\n      />\r\n      <Calendar\r\n        onChange={(date: Date) => setStartDate(\"startDate\", date)}\r\n        value={startDate.get(\"startDate\") || new Date()}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst ActivityListEmpty = () => {\r\n  return (\r\n    <Segment placeholder style={{ width: \"100%\", marginTop: 50 }}>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        There are no activities - Try to remove some filters\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Remove all filters\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default ActivityListEmpty;\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Placeholder } from \"semantic-ui-react\";\r\n\r\nconst ActivityListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 50 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header >\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment clearing>\r\n          <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ActivityListItemPlaceholder;\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityListEmpty from \"./ActivityListEmpty\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadActivities,\r\n    activitiesGroup,\r\n    setPage,\r\n    page,\r\n    totalPages,\r\n    loadingInitial,\r\n  } = RootStore.ActivityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPage(page + 1);\r\n    loadActivities().then(() => {\r\n      setLoadingNext(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      await loadActivities();\r\n    };\r\n    nestedFunc();\r\n  }, [loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {activitiesGroup.length === 0 && loadingInitial ? (\r\n          <Fragment>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            {activitiesGroup.length === 0 ? (\r\n              <ActivityListEmpty />\r\n            ) : (\r\n              <InfiniteScroll\r\n                pageStart={0}\r\n                loadMore={handleGetNext}\r\n                hasMore={!loadingNext && page + 1 < totalPages}\r\n                initialLoad={false}\r\n              >\r\n                <ActivityList />\r\n              </InfiniteScroll>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLInputElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextInput: React.FunctionComponent<FieldRenderProps<\r\n  string,\r\n  HTMLElement\r\n>> = ({ input, width, type, placeholder, meta: { touched, error } }) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} autoComplete=\"off\" placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLTextAreaElement>,\n    FormFieldProps {}\n\nconst TextAreaInput: React.FunctionComponent<FieldRenderProps<string, HTMLElement>> = ({\n  input,\n  width,\n  rows,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <textarea rows={rows} {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextAreaInput;\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLSelectElement>,\n    FormFieldProps {}\n\nconst SelectInput: React.FunctionComponent<FieldRenderProps<string, HTMLElement>> = ({\n    input,\n    width,\n    options,\n    placeholder,\n    meta: { touched, error }\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <Select \n            value={input.value}\n            onChange={(e, data) => input.onChange(data.value)}\n            placeholder={placeholder}\n            options={options}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default SelectInput\n","import React from \"react\";\nimport { FieldRenderProps } from \"react-final-form\";\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\nimport { DateTimePicker } from \"react-widgets\";\n// import Globalize from 'globalize';\n// import globalizeLocalizer from 'react-widgets-globalize';\n\ninterface IProps\n  extends FieldRenderProps<Date, HTMLInputElement>,\n    FormFieldProps {}\n\nconst DateInput: React.FunctionComponent<FieldRenderProps<\n  Date,\n  HTMLElement\n>> = ({\n  input,\n  width,\n  placeholder,\n  date = false,\n  time = false,\n  meta: { touched, error },\n  ...rest\n}) => {\n  // let formatter = Globalize.dateFormatter({ raw: 'dd MMM yyyy' })\n  // Globalize.locale('it')\n  // globalizeLocalizer()\n\n  const format = () => {\n    if (date) return \"dd/MM/yyyy\";\n    if (time) return \"HH:mm\";\n  };\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <DateTimePicker\n        placeholder={placeholder}\n        value={input.value || null}\n        onChange={input.onChange}\n        onBlur={input.onBlur}\n        onKeyDown={(e: any) => e.preventDefault()}\n        format={format()}\n        date={date}\n        time={time}\n        {...rest}\n      />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default DateInput;\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Segment, Form, Button, Grid } from \"semantic-ui-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport TextAreaInput from \"./../../../app/common/form/TextAreaInput\";\r\nimport SelectInput from \"./../../../app/common/form/SelectInput\";\r\nimport { category } from \"./../../../app/common/options/categoryOptions\";\r\nimport DateInput from \"./../../../app/common/form/DateInput\";\r\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan,\r\n} from \"revalidate\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\ninterface DetailParams {\r\n  activityId: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    buttonSubmit,\r\n    createActivity,\r\n    selectedActivity,\r\n    editActivity,\r\n    loadActivity,\r\n  } = RootStore.ActivityStore;\r\n\r\n  const validate = combineValidators({\r\n    title: isRequired({ message: \"The event title is required\" }),\r\n    description: composeValidators(\r\n      isRequired(\"Description\"),\r\n      hasLengthGreaterThan(5)({\r\n        message: \"Description needs to be at least 5 characters. \",\r\n      })\r\n    )(),\r\n    city: isRequired(\"City\"),\r\n    venue: isRequired(\"Venue\"),\r\n    date: isRequired(\"Date\"),\r\n    time: isRequired(\"Time\"),\r\n  });\r\n\r\n  const { activityId: urlActivityId } = match.params;\r\n\r\n  const [activity, setActivity] = useState(selectedActivity);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      setLoading(true);\r\n      let act = await loadActivity(urlActivityId);\r\n      act = { ...act, time: act.date };\r\n      setActivity(act);\r\n      setLoading(false);\r\n    };\r\n\r\n    if (urlActivityId) nestedFunc();\r\n    else setActivity(new ActivityFormValues());\r\n  }, [urlActivityId, loadActivity]);\r\n\r\n  const handleFinalFormSubmit = async (values: any) => {\r\n    const dateAndTime = combineDateAndTime(values.date, values.time);\r\n    const { date, time, ...activity } = values;\r\n    activity.date = dateAndTime;\r\n\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      await createActivity(newActivity);\r\n    } else {\r\n      await editActivity(activity);\r\n    }\r\n  };\r\n\r\n  function handleCancelActivity() {\r\n    if (urlActivityId) history.push(\"/activities/\" + urlActivityId);\r\n    else history.push(\"/activities\");\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n            validate={validate}\r\n            initialValues={activity}\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={activity.description}\r\n                  component={TextAreaInput}\r\n                  rows={3}\r\n                />\r\n\r\n                <Field\r\n                  name=\"category\"\r\n                  placeholder=\"Category\"\r\n                  value={activity.category}\r\n                  component={SelectInput}\r\n                  options={category}\r\n                />\r\n                <Form.Group widths=\"equal\">\r\n                  <Field\r\n                    name=\"date\"\r\n                    placeholder=\"Date\"\r\n                    date={true}\r\n                    value={activity.date}\r\n                    component={DateInput}\r\n                  />\r\n                  <Field\r\n                    name=\"time\"\r\n                    placeholder=\"Time\"\r\n                    time={true}\r\n                    value={activity.date}\r\n                    component={DateInput}\r\n                  />\r\n                </Form.Group>\r\n                <Field\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  value={activity.city}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"venue\"\r\n                  placeholder=\"Venue\"\r\n                  value={activity.venue}\r\n                  component={TextInput}\r\n                />\r\n                <Button\r\n                  loading={buttonSubmit}\r\n                  floated=\"right\"\r\n                  positive\r\n                  disabled={loading || invalid || pristine}\r\n                  type=\"submit\"\r\n                  content=\"Submit\"\r\n                />\r\n                <Button\r\n                  onClick={() => handleCancelActivity()}\r\n                  floated=\"right\"\r\n                  disabled={loading}\r\n                  type=\"button\"\r\n                  content=\"Cancel\"\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  error: any;\r\n  text?: string;\r\n}\r\n\r\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\r\n  const CheckError = () => {\r\n    // Per errore con text passato al component \r\n    // if (text) {\r\n    //   return <Message content={text} />;\r\n    // }\r\n\r\n    if (error.data) {\r\n      // Se è un errore del server proveniente da validazione lato server\r\n      if (error.data.errors) {\r\n        return Object.values(error.data.errors)\r\n          .flat()\r\n          .map((err, i) => <Message.Item key={i}>{err} </Message.Item>);\r\n      } else {\r\n        // Se è un errore del server proveniente da presenza da username o email esistenti\r\n        return <Message>{error.data} </Message>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Message error>\r\n      <Message.Header>{error.statusText}</Message.Header>\r\n      {CheckError()}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  buttonName: string;\r\n}\r\n\r\nconst withModal = (Component: any) => {\r\n  const WithModal: React.FC<IProps> = (props) => {\r\n    const { buttonName } = props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={\r\n          <Button size=\"huge\" inverted>\r\n            {buttonName}\r\n          </Button>\r\n        }\r\n        size=\"mini\"\r\n      >\r\n        <Modal.Content>\r\n          <Component {...props} />\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  };\r\n  return WithModal;\r\n};\r\n\r\nexport default withModal;\r\n","import { createValidator } from \"revalidate\";\r\n\r\nexport const isValidEmail = createValidator(\r\n  (message) => (value) => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n      return message;\r\n    }\r\n  },\r\n  \"Invalid email address\"\r\n);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"./../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { combineValidators, isRequired, composeValidators } from \"revalidate\";\r\nimport ErrorMessage from \"../../app/common/form/ErrorMessage\";\r\nimport withModal from \"./../../app/common/modals/withModal\";\r\nimport { isValidEmail } from \"../../app/common/form/ValidatorMethod\";\r\n\r\nconst LoginForm = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { login } = RootStore.UserStore;\r\n\r\n  const [error, setError] = useState<any>(null);\r\n\r\n  const validate = combineValidators({\r\n    email: composeValidators(isRequired(\"Email\"), isValidEmail())(),\r\n    password: isRequired(\"Password\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: IUserFormValues) => {\r\n    await login(values).catch((e) => {\r\n      setError(e);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={handleSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit, submitting, form, invalid, pristine }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header\r\n            as=\"h3\"\r\n            content=\"Login to Appen\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <Field name=\"email\" placeholder=\"Email\" component={TextInput} />\r\n          <Field\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            component={TextInput}\r\n          />\r\n\r\n          {error && (\r\n            <ErrorMessage error={error} text=\"Invalid Email or Password\" />\r\n          )}\r\n          <Button\r\n            disabled={invalid || pristine}\r\n            color=\"teal\"\r\n            content=\"Login\"\r\n            loading={submitting}\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withModal(LoginForm);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"./../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { combineValidators, isRequired, composeValidators } from \"revalidate\";\r\nimport ErrorMessage from \"../../app/common/form/ErrorMessage\";\r\nimport { isValidEmail } from \"../../app/common/form/ValidatorMethod\";\r\nimport withModal from \"../../app/common/modals/withModal\";\r\n\r\nconst RegisterForm = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { register } = RootStore.UserStore;\r\n\r\n  const [error, setError] = useState<any>(null);\r\n\r\n  const validate = combineValidators({\r\n    userName: isRequired(\"Username\"),\r\n    displayName: isRequired(\"Display name\"),\r\n    email: composeValidators(isRequired(\"Email\"), isValidEmail())(),\r\n    password: isRequired(\"Password\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: IUserFormValues) => {\r\n    await register(values).catch((e) => {\r\n      setError(e);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={handleSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit, submitting, form, invalid, pristine }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header\r\n            as=\"h3\"\r\n            content=\"Sign up to Appen\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <Field name=\"userName\" placeholder=\"Username\" component={TextInput} />\r\n          <Field\r\n            name=\"displayName\"\r\n            placeholder=\"DisplayName\"\r\n            component={TextInput}\r\n          />\r\n          <Field name=\"email\" placeholder=\"Email\" component={TextInput} />\r\n          <Field\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            component={TextInput}\r\n          />\r\n          {error && <ErrorMessage error={error} />}\r\n          <Button\r\n            disabled={invalid || pristine}\r\n            color=\"teal\"\r\n            content=\"Register\"\r\n            loading={submitting}\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withModal(RegisterForm);\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Container, Segment, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"./../../app/stores/rootStore\";\r\nimport LoginForm from \"../user/LoginForm\";\r\nimport RegisterForm from \"../user/RegisterForm\";\r\n\r\nexport const Home = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user } = rootStore.UserStore;\r\n  const token = window.localStorage.getItem(\"jwt\");\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logoAppen.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Appen\r\n        </Header>\r\n        {user && token ? (\r\n          <Fragment>\r\n            <Header\r\n              as=\"h2\"\r\n              inverted\r\n              content={\"Welcome back \" + user.displayName}\r\n            />\r\n            <br />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to activities!\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Appen\" />\r\n            <br />\r\n\r\n            <LoginForm buttonName=\"Login\" />\r\n            <RegisterForm buttonName=\"Register\" />\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  content?: string;\r\n}\r\n\r\nexport const LoadingComponent: React.FC<IProps> = ({\r\n  content,\r\n}) => {\r\n  return (\r\n    <Dimmer active inverted>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Item, Header, Button, Image, Icon } from \"semantic-ui-react\";\r\nimport { IActivityForm } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(50%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface IProps {\r\n  selectedActivity: IActivityForm;\r\n}\r\n\r\nconst ActivityDetailedHeader: React.FC<IProps> = ({ selectedActivity }) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    attendActivity,\r\n    unattendActivity,\r\n    loadingAttendance: loading,\r\n  } = RootStore.ActivityStore;\r\n  const host = selectedActivity.attendees.filter((a) => a.isHost)[0];\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        <Image\r\n          src={\"/assets/categoryImages/\" + selectedActivity.category + \".jpg\"}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={selectedActivity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(selectedActivity.date!, \"eeee do MMMM\")}</p>\r\n                <p>\r\n                  Hosted by\r\n                  <Link to={\"/profile/\" + host.username}>\r\n                    <strong> {host.displayName}</strong>\r\n                  </Link>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {selectedActivity.isHost ? (\r\n          <Button\r\n            as={Link}\r\n            to={\"/manage/\" + selectedActivity.id}\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n          >\r\n            Manage Event\r\n          </Button>\r\n        ) : selectedActivity.isGoing ? (\r\n          <Button loading={loading} onClick={unattendActivity}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button loading={loading} color=\"teal\" onClick={attendActivity}>\r\n            <Icon name=\"handshake outline\" /> Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { IActivityForm } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface IProps {\r\n  selectedActivity: IActivityForm;\r\n}\r\n\r\nconst ActivityDetailedInfo: React.FC<IProps> = ({ selectedActivity }) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{selectedActivity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>\r\n              {format(selectedActivity.date!, \"eeee do MMMM\")} at{\" \"}\r\n              {format(selectedActivity.date!, \"h:mm a\")}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>{selectedActivity.venue + \", \" + selectedActivity.city}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedInfo);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextAreaInput from \"./../../../app/common/form/TextAreaInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { formatDistance } from \"date-fns\";\r\n\r\nconst ActivityDetailedChat = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addComment,\r\n    selectedActivity,\r\n  } = RootStore.ActivityStore;\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      await createHubConnection(selectedActivity.id!);\r\n    };\r\n\r\n    nestedFunc();\r\n\r\n    return () => {\r\n      stopHubConnection(selectedActivity.id!);\r\n    };\r\n  }, [createHubConnection, stopHubConnection, selectedActivity]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {selectedActivity &&\r\n            selectedActivity.comments &&\r\n            selectedActivity.comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n                <Comment.Content>\r\n                  <Comment.Author as={Link} to={\"profile\" + comment.username}>\r\n                    {comment.displayName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistance(comment.createdAt, new Date())}</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.body}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n\r\n          <FinalForm\r\n            onSubmit={addComment}\r\n            render={({ handleSubmit, submitting, form }) => (\r\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n                <Field\r\n                  name=\"body\"\r\n                  component={TextAreaInput}\r\n                  rows={2}\r\n                  placeholder=\"Add your comment here...\"\r\n                />\r\n                <Button\r\n                  content=\"Add Reply\"\r\n                  labelPosition=\"left\"\r\n                  icon=\"edit\"\r\n                  primary\r\n                  loading={submitting}\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, List, Item, Label, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst ActivityDetailedSidebar: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"}\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item key={attendee.username} style={{ position: \"relative\" }}>\r\n              {attendee.isHost && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={\"/profile/\" + attendee.username}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.isFollowed &&\r\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default observer(ActivityDetailedSidebar);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\ninterface DetailParams {\r\n  activityId: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n}) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { loadActivity, selectedActivity } = RootStore.ActivityStore;\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      await loadActivity(match.params.activityId);\r\n    };\r\n    nestedFunc();\r\n  }, [match.params.activityId, loadActivity]);\r\n\r\n  if (selectedActivity.id !== match.params.activityId) {\r\n    return <LoadingComponent content=\"Loading activity...\" />;\r\n  } else {\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailedHeader selectedActivity={selectedActivity} />\r\n          <ActivityDetailedInfo selectedActivity={selectedActivity} />\r\n          <ActivityDetailedChat />\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailedSidebar attendees={selectedActivity.attendees}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport { Segment, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere but couldn't find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to Activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Segment, Form, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IMessage } from \"../../app/models/message\";\r\n// RCE CSS\r\nimport \"react-chat-elements/dist/main.css\";\r\n// MessageBox component\r\nimport { MessageBox } from \"react-chat-elements\";\r\nimport TextInput from \"./../../app/common/form/TextInput\";\r\nimport { format } from \"date-fns\";\r\nimport { ThemeProvider, MessageList } from \"@livechat/ui-kit\";\r\n\r\nconst Chat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user } = rootStore.UserStore;\r\n  const {\r\n    messages: chat,\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addMessage,\r\n  } = rootStore.ChatStore;\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      await createHubConnection();\r\n    };\r\n\r\n    nestedFunc();\r\n    return () => {\r\n      stopHubConnection();\r\n    };\r\n  }, [createHubConnection, stopHubConnection]);\r\n\r\n  const messageSide = (message: IMessage) => {\r\n    if (message.userName === user?.username) {\r\n      return \"right\";\r\n    } else {\r\n      return \"left\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment attached>\r\n      <ThemeProvider>\r\n        <div style={{ width: \"auto\", height: 500 }}>\r\n          <MessageList active>\r\n            {chat &&\r\n              chat.map((message) => (\r\n                <MessageBox\r\n                  key={message.id}\r\n                  position={messageSide(message)}\r\n                  type={\"text\"}\r\n                  text={message.body}\r\n                  title={message.userName}\r\n                  dateString={format(new Date(message.createAt), \"k:mm\")}\r\n                />\r\n              ))}\r\n          </MessageList>\r\n        </div>\r\n        <br />\r\n        <FinalForm\r\n          onSubmit={addMessage}\r\n          render={({ handleSubmit, submitting, form }) => (\r\n            <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n              <Grid columns=\"two\" divided>\r\n                <Grid.Row>\r\n                  <Grid.Column width={14}>\r\n                    <Field\r\n                      name=\"body\"\r\n                      component={TextInput}\r\n                      placeholder=\"Type message...\"\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={2}>\r\n                    <Button\r\n                      // content=\"Add Message\"\r\n                      // labelPosition=\"left\"\r\n                      icon=\"send\"\r\n                      primary\r\n                      loading={submitting}\r\n                    />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        />\r\n      </ThemeProvider>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(Chat);\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal,\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  follow: (username: string) => void;\r\n  unfollow: (username: string) => void;\r\n  followingProfile: boolean;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  isCurrentUser,\r\n  followingProfile,\r\n  follow,\r\n  unfollow,\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile.displayName}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followerCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated=\"move\">\r\n              <Reveal.Content visible style={{ width: \"100%\" }}>\r\n                <Button\r\n                  fluid\r\n                  color=\"teal\"\r\n                  content={profile.isFollowed ? \"Following\" : \"Not following\"}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={followingProfile}\r\n                  fluid\r\n                  basic\r\n                  color={profile.isFollowed ? \"red\" : \"green\"}\r\n                  content={profile.isFollowed ? \"Unfollow\" : \"Follow\"}\r\n                  onClick={\r\n                    profile.isFollowed\r\n                      ? () => unfollow(profile.username)\r\n                      : () => follow(profile.username)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import React, { Fragment, useState, useContext } from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { IPhoto } from \"../../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  photo: IPhoto;\r\n}\r\n\r\nconst ModalPhotoConfirmation: React.FC<IProps> = ({ photo }) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { deletePhoto, deletingPhoto } = RootStore.ProfileStore;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={modalOpen}\r\n      trigger={\r\n        <Button\r\n          icon=\"trash\"\r\n          labelPosition=\"right\"\r\n          content=\"Delete\"\r\n          onClick={() => setModalOpen(true)}\r\n        />\r\n      }\r\n    >\r\n      {photo.isMain ? (\r\n        <Fragment>\r\n          <Modal.Header>Delete photo</Modal.Header>\r\n          <Modal.Content>\r\n            You cannot delete your main photo. Change it before deleting.\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              content=\"Close\"\r\n              icon=\"close\"\r\n              onClick={() => setModalOpen(false)}\r\n            />\r\n          </Modal.Actions>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <Modal.Header>Delete photo</Modal.Header>\r\n          <Modal.Content>Are you sure to delete this photo? </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              positive\r\n              content=\"Yes\"\r\n              icon=\"check\"\r\n              loading={deletingPhoto}\r\n              onClick={async () => {\r\n                await deletePhoto(photo);\r\n                setModalOpen(false);\r\n              }}\r\n            />\r\n            <Button\r\n              negative\r\n              content=\"No\"\r\n              icon=\"close\"\r\n              onClick={() => setModalOpen(false)}\r\n            />\r\n          </Modal.Actions>\r\n        </Fragment>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalPhotoConfirmation);\r\n","import React, { useContext } from \"react\";\r\nimport { Modal, Card, Image, Button, Feed } from \"semantic-ui-react\";\r\nimport { IPhoto } from \"../../../app/models/profile\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ModalPhotoConfirmation from \"./ModalPhotoConfirmation\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface IProps {\r\n  photo: IPhoto;\r\n}\r\n\r\nconst ModalPhoto: React.FC<IProps> = ({ photo }) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    settingMainPhoto,\r\n    setMainPhoto,\r\n  } = RootStore.ProfileStore;\r\n\r\n  return (\r\n    <Modal\r\n      key={photo.id}\r\n      closeIcon\r\n      trigger={\r\n        <Card>\r\n          <Image src={photo.url} rounded />\r\n        </Card>\r\n      }\r\n      centered={false}\r\n    >\r\n      <Modal.Header>{profile!.displayName + \" photo\"}</Modal.Header>\r\n      <Modal.Content image>\r\n        <Image src={photo.url} />\r\n        <Modal.Description>\r\n          <Feed>\r\n            <Feed.Event>\r\n              <Feed.Label>\r\n                <img src={profile!.image || \"/assets/user.png\"} />\r\n              </Feed.Label>\r\n              <Feed.Content>\r\n                <Feed.Summary>\r\n                  <Feed.User>{profile!.displayName}</Feed.User>\r\n                  <Feed.Date>\r\n                    {format(photo.date, \"do MMMM yyyy - H:mm\")}\r\n                  </Feed.Date>\r\n                </Feed.Summary>\r\n              </Feed.Content>\r\n            </Feed.Event>\r\n          </Feed>\r\n          {photo.description && <p>{photo.description}</p>}\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      {isCurrentUser && (\r\n        <Modal.Actions>\r\n          <ModalPhotoConfirmation photo={photo} />\r\n          {!photo.isMain && (\r\n            <Button\r\n              onClick={() => setMainPhoto(photo)}\r\n              loading={settingMainPhoto}\r\n              color=\"orange\"\r\n              content=\"Set as main photo\"\r\n            />\r\n          )}\r\n        </Modal.Actions>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalPhoto);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Icon, Header } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  setFile: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"10px\",\r\n  paddingTop: \"30px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"250px\",\r\n  width: \"250px\",\r\n  cursor: \"pointer\",\r\n  margin: \"auto\",\r\n};\r\n\r\nconst dropzoneActive = {\r\n  borderColor: \"green\",\r\n};\r\n\r\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFile }) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFile(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      )\r\n    );\r\n  }, [setFile]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header>\r\n        To add a photo <br /> drop here <br />\r\n        or <u>select</u>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface IProps {\r\n  setImage: (file: Blob) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\r\n  const cropper = useRef<Cropper>(null);\r\n\r\n  const cropImage = () => {\r\n    if (\r\n      cropper.current &&\r\n      typeof cropper.current.getCroppedCanvas() === \"undefined\"\r\n    ) {\r\n      return;\r\n    }\r\n    cropper &&\r\n      cropper.current &&\r\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n        setImage(blob);\r\n      }, \"image/jpeg\");\r\n  };\r\n\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      ref={cropper}\r\n      style={{  height:400, width: 400 }}\r\n      aspectRatio={1/1}\r\n      guides={false}\r\n      preview='.img-preview'\r\n      viewMode={1}\r\n      dragMode=\"move\"\r\n      scalable={true}\r\n      cropBoxMovable={true}\r\n      cropBoxResizable={true}\r\n      crop={cropImage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Grid, Button, Card, Form } from \"semantic-ui-react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport TextAreaInput from \"./../form/TextAreaInput\";\r\n\r\ninterface IProps {\r\n  uploadPhoto: (file: Blob, description: string) => void;\r\n  loading: boolean;\r\n  setModalOpen: (status: boolean) => void;\r\n}\r\nexport const PhotoUploadWidget: React.FC<IProps> = ({\r\n  uploadPhoto,\r\n  loading,\r\n  setModalOpen,\r\n}) => {\r\n  const [file, setFile] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n  const [description] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      file.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  });\r\n\r\n  const handleUpload = async (value: any) => {\r\n    await uploadPhoto(image!, value.description);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {file.length > 0 ? (\r\n        <Fragment>\r\n          <Grid divided=\"vertically\">\r\n            <Grid.Row centered>\r\n              {file.length > 0 && (\r\n                <PhotoWidgetCropper\r\n                  setImage={setImage}\r\n                  imagePreview={file[0].preview}\r\n                />\r\n              )}\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n              <Grid.Column width={3}>\r\n                <Card centered style={{ width: \"fit-content\" }}>\r\n                  <div\r\n                    className=\"img-preview\"\r\n                    style={{\r\n                      minHeight: \"100px\",\r\n                      minWidth: \"100px\",\r\n                      overflow: \"hidden\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  />\r\n                </Card>\r\n              </Grid.Column>\r\n              <Grid.Column width={13}>\r\n                <FinalForm\r\n                  onSubmit={handleUpload}\r\n                  render={({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <Field\r\n                        name=\"description\"\r\n                        placeholder=\"Write something about this picture...\"\r\n                        value={description}\r\n                        component={TextAreaInput}\r\n                        rows={2}\r\n                      />\r\n                      <br />\r\n                      <Button\r\n                        positive\r\n                        content=\"Upload\"\r\n                        icon=\"check\"\r\n                        loading={loading}\r\n                        floated=\"right\"\r\n                        type=\"submit\"\r\n                      />\r\n                      <Button\r\n                        content=\"Back\"\r\n                        icon=\"arrow left\"\r\n                        disabled={loading}\r\n                        floated=\"right\"\r\n                        onClick={() => setFile([])}\r\n                      />\r\n                    </Form>\r\n                  )}\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <Grid.Column width={5}>\r\n            <PhotoWidgetDropzone setFile={setFile} />\r\n          </Grid.Column>\r\n          <br />\r\n          <Button\r\n            content=\"Close\"\r\n            icon=\"close\"\r\n            floated=\"right\"\r\n            onClick={() => setModalOpen(false)}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Modal, Button, Icon } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoUploadWidget from \"../../../app/common/photoUpload/PhotoUploadWidget\";\r\n\r\nconst ModalPhotoUpload = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { uploadPhoto, upladingPhoto } = RootStore.ProfileStore;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      trigger={\r\n        <Button\r\n          floated=\"right\"\r\n          basic\r\n          color=\"blue\"\r\n          onClick={() => setModalOpen(true)}\r\n        >\r\n          <Icon name=\"camera\" />\r\n          Add photo\r\n        </Button>\r\n      }\r\n      open={modalOpen}\r\n    >\r\n      <Modal.Header>Photo upload</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <PhotoUploadWidget\r\n            uploadPhoto={uploadPhoto}\r\n            loading={upladingPhoto}\r\n            setModalOpen={setModalOpen}\r\n          />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalPhotoUpload);\r\n","import React, { useContext } from \"react\";\r\nimport { Tab, Header, Card, Container, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport ModalPhoto from \"./ModalPhoto\";\r\nimport ModalPhotoUpload from \"./ModalPhotoUpload\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { profile, isCurrentUser } = RootStore.ProfileStore;\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Column width={16}>\r\n            <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n            {isCurrentUser && <ModalPhotoUpload />}\r\n          </Grid.Column>\r\n          <Grid.Column width={16}>\r\n            {profile && (\r\n              <Card.Group itemsPerRow={4}>\r\n                {profile?.photos.map((photo) => (\r\n                  <ModalPhoto photo={photo} key={photo.id} />\r\n                ))}\r\n              </Card.Group>\r\n            )}\r\n            {profile && profile.photos.length === 0 && (\r\n              <p>No photos available</p>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import React, { useContext } from \"react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Modal, Button, Form } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { gender } from \"../../../app/common/options/categoryOptions\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\r\nimport SelectInput from \"../../../app/common/form/SelectInput\";\r\nimport DateInput from \"../../../app/common/form/DateInput\";\r\n\r\nconst ModalProfileInfoForm = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { profile, updateProfile, updatingProfile } = RootStore.ProfileStore;\r\n\r\n  const handleFinalFormSubmit = async (values: any) => {\r\n    await updateProfile(values);\r\n  };\r\n\r\n  const validate = combineValidators({\r\n    displayName: isRequired({ message: \"The displayName is required\" }),\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      trigger={<Button content=\"Edit profile info\" floated=\"right\" />}\r\n      centered={false}\r\n    >\r\n      <Modal.Header>{profile!.displayName + \"'s info\"}</Modal.Header>\r\n      <Modal.Content>\r\n        {profile && (\r\n          <FinalForm\r\n            validate={validate}\r\n            initialValues={profile}\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={updatingProfile}>\r\n                <Field\r\n                  name=\"displayName\"\r\n                  placeholder=\"DisplayName\"\r\n                  value={profile.displayName}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"bio\"\r\n                  placeholder=\"Bio\"\r\n                  value={profile.bio}\r\n                  component={TextAreaInput}\r\n                  rows={2}\r\n                />\r\n                <Field\r\n                  name=\"gender\"\r\n                  placeholder=\"Gender\"\r\n                  value={profile.gender}\r\n                  component={SelectInput}\r\n                  options={gender}\r\n                />\r\n                <Field\r\n                  name=\"dateOfBirth\"\r\n                  placeholder=\"DateOfBirth\"\r\n                  date={true}\r\n                  value={profile.dateOfBirth}\r\n                  initialView=\"decade\"\r\n                  component={DateInput}\r\n                />\r\n                <Field\r\n                  name=\"phone\"\r\n                  placeholder=\"Phone\"\r\n                  value={profile.phone}\r\n                  type=\"number\"\r\n                  component={TextInput}\r\n                />\r\n                <Button\r\n                  loading={updatingProfile}\r\n                  floated=\"right\"\r\n                  positive\r\n                  disabled={updatingProfile || invalid || pristine}\r\n                  type=\"submit\"\r\n                  content=\"Submit\"\r\n                />\r\n                <br />\r\n                <br />\r\n              </Form>\r\n            )}\r\n          />\r\n        )}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalProfileInfoForm);\r\n","import React, { useContext } from \"react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Tab, Container, Grid, Header, List } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { format } from \"date-fns\";\r\nimport ModalProfileInfoForm from \"./ModalProfileInfoForm\";\r\n\r\nconst ProfileInfo = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { profile, isCurrentUser } = RootStore.ProfileStore;\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Column width={16}>\r\n            <Header\r\n              floated=\"left\"\r\n              icon=\"user\"\r\n              content={profile?.displayName + \"'s info\"}\r\n            />\r\n            {isCurrentUser && <ModalProfileInfoForm />}\r\n          </Grid.Column>\r\n          <Grid.Column width={16}>\r\n            {profile && (\r\n              <List>\r\n                <List.Item>\r\n                  <List.Icon name=\"user\" />\r\n                  <List.Content>{profile?.displayName}</List.Content>\r\n                </List.Item>\r\n                {profile?.bio && (\r\n                  <List.Item>\r\n                    <List.Icon name=\"book\" />\r\n                    <List.Content> {profile.bio}</List.Content>\r\n                  </List.Item>\r\n                )}\r\n                {profile?.gender && (\r\n                  <List.Item>\r\n                    {profile.gender === \"Male\" ? (\r\n                      <List.Icon name=\"mars\" />\r\n                    ) : (\r\n                      <List.Icon name=\"venus\" />\r\n                    )}\r\n                    <List.Content>{profile.gender}</List.Content>\r\n                  </List.Item>\r\n                )}\r\n                {profile?.dateOfBirth && (\r\n                  <List.Item>\r\n                    <List.Icon name=\"birthday cake\" />\r\n                    <List.Content>\r\n                      {format(profile?.dateOfBirth, \"do MMM yyyy\")}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                )}\r\n                {profile?.phone && (\r\n                  <List.Item>\r\n                    <List.Icon name=\"mobile alternate\" />\r\n                    <List.Content>{profile.phone}</List.Content>\r\n                  </List.Item>\r\n                )}\r\n              </List>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileInfo);\r\n","import React from \"react\";\r\nimport { Card, Image, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IProfile } from \"./../../app/models/profile\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n}\r\n\r\nconst ProfileCard: React.FC<IProps> = ({ profile }) => {\r\n  return (\r\n    <Card as={Link} to={`/profile/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div>\r\n          <Icon name=\"user\" />\r\n          {profile.followerCount} Followers\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileFollowings = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    followings,\r\n    followingsList,\r\n    activeTab\r\n  } = rootStore.ProfileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={followingsList}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile!.displayName}`\r\n                : `People ${profile!.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={5}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileFollowings);\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IActivityUser } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"futureEvents\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"pastEvents\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosted\" } },\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadActivitiesUser,\r\n    profile,\r\n    loadingActivities,\r\n    activitiesUser,\r\n  } = RootStore.ProfileStore!;\r\n\r\n  useEffect(() => {\r\n    loadActivitiesUser(profile!.username);\r\n  }, [loadActivitiesUser, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = \"past\";\r\n        break;\r\n      case 2:\r\n        predicate = \"hosting\";\r\n        break;\r\n      default:\r\n        predicate = \"future\";\r\n        break;\r\n    }\r\n    loadActivitiesUser(profile!.username, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {activitiesUser.map((activity: IActivityUser) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport ProfilePhotos from \"./photos/ProfilePhotos\";\r\nimport ProfileInfo from './info/ProfileInfo';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfileActivities from \"./ProfileActivities\";\r\n\r\ninterface IProps {\r\n  setActiveTab: (activeIndex: any) => void; \r\n}\r\n\r\nconst panes = [\r\n  { menuItem: \"Info\", render: () => <ProfileInfo/> },\r\n  { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\r\n  {\r\n    menuItem: \"Activities\",\r\n    render: () => <ProfileActivities />,\r\n  },\r\n  {\r\n    menuItem: \"Followers\",\r\n    render: () => <ProfileFollowings/>,\r\n  },\r\n  {\r\n    menuItem: \"Following\",\r\n    render: () => <ProfileFollowings/>,\r\n  },\r\n];\r\n\r\nconst ProfileContent: React.FC<IProps> = ({setActiveTab}) => {\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data)=> setActiveTab(data.activeIndex)}\r\n      // activeIndex={1}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContent;\r\n","import React from \"react\";\r\nimport { Grid, Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\nconst ProfilePlaceholder = () => {\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <Segment style={{ minHeight: 150 }}>\r\n          <Placeholder>\r\n            <Placeholder.Header></Placeholder.Header>\r\n            <Placeholder.Header></Placeholder.Header>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Header></Placeholder.Header>\r\n            <Placeholder.Header></Placeholder.Header>\r\n          </Placeholder>\r\n        </Segment>\r\n      </Grid.Column>\r\n      <Grid.Column width={12}>\r\n        <Segment style={{ minHeight: 150 }}>\r\n          <Placeholder>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Header></Placeholder.Header>\r\n\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Segment>\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <Segment style={{ minHeight: 150 }}>\r\n          <Placeholder>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n          </Placeholder>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfilePlaceholder;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { LoadingComponent } from \"../../app/layout/LoadingComponent\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ProfilePlaceholder from './ProfilePlaceholder';\r\n\r\ninterface RouteParams {\r\n  username: string;\r\n}\r\n\r\nconst ProfilePage: React.FC<RouteComponentProps<RouteParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadProfile,\r\n    profile,\r\n    loadingProfile,\r\n    follow,\r\n    unfollow,\r\n    isCurrentUser,\r\n    followingProfile,\r\n    setActiveTab,\r\n  } = RootStore.ProfileStore;\r\n  const { username } = match.params;\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      await loadProfile(username);\r\n    };\r\n    nestedFunc();\r\n  }, [loadProfile, username]);\r\n\r\n  if (loadingProfile || !profile || profile.username !== username)\r\n    // return <LoadingComponent content=\"Loading profile...\" />;\r\n    return <ProfilePlaceholder/>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader\r\n          profile={profile!}\r\n          isCurrentUser={isCurrentUser}\r\n          followingProfile={followingProfile}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { RootStoreContext } from \"./../stores/rootStore\";\r\n\r\ninterface IProps extends RouteProps {\r\n    render: (props: RouteComponentProps<any>) => JSX.Element\r\n}\r\n\r\nconst PrivateRoute: React.FC<IProps> = ({ render: JsxElements, ...rest }) => {\r\n  const RootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn } = RootStore.UserStore;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props)=>  isLoggedIn ? <JsxElements {...props}/> : <Redirect to={'/'}/>}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(PrivateRoute);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport Navbar from \"../../features/nav/Navbar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport Home from \"../../features/home/Home\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport ScrollToTop from \"./scrollToTop\";\r\nimport NotFound from \"./NotFound\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { LoadingComponent } from \"./LoadingComponent\";\r\nimport Chat from \"./../../features/chat/Chat\";\r\nimport ProfilePage from './../../features/profiles/ProfilePage';\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst App = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { token } = rootStore.CommonStore;\r\n  const { user, getUser } = rootStore.UserStore;\r\n\r\n  useEffect(() => {\r\n    const nestedFunc = async () => {\r\n      await getUser();\r\n    };\r\n\r\n    if (token) {\r\n      nestedFunc();\r\n    }\r\n  }, [getUser]); \r\n\r\n  if (token && !user) return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <ScrollToTop />\r\n      <ToastContainer position=\"bottom-right\" />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/activities\"\r\n          render={() => (\r\n            <Fragment>\r\n              <Navbar />\r\n              <Container style={{ marginTop: \"7em\" }}>\r\n                <ActivityDashboard />\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/activities/:activityId\"\r\n          render={(props) => (\r\n            <Fragment>\r\n              <Navbar />\r\n              <Container style={{ marginTop: \"7em\" }}>\r\n                <ActivityDetails {...props} />\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path={[\"/createActivity\", \"/manage/:activityId\"]}\r\n          render={(props) => (\r\n            <Fragment>\r\n              <Navbar />\r\n              <Container style={{ marginTop: \"7em\" }}>\r\n                <ActivityForm {...props} />\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path={\"/profile/:username\"}\r\n          render={(props) => (\r\n            <Fragment>\r\n              <Navbar />\r\n              <Container style={{ marginTop: \"7em\" }}>\r\n                <ProfilePage {...props} />\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path={\"/chat\"}\r\n          render={(props) => (\r\n            <Fragment>\r\n              <Navbar />\r\n              <Container style={{ marginTop: \"7em\" }}>\r\n                <Chat />\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/not-found\"\r\n          render={() => (\r\n            <Fragment>\r\n              <Navbar />\r\n              <Container style={{ marginTop: \"7em\" }}>\r\n                <NotFound />\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n\r\n        <Redirect to=\"not-found\" />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./app/layout/styles.css\";\r\nimport App from \"./app/layout/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ScrollToTop from \"./app/layout/scrollToTop\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport dateFnsLocalizer from \"react-widgets-date-fns\";\r\n\r\ndateFnsLocalizer();\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <Helmet>\r\n      <meta charSet=\"utf-8\" />\r\n      <title>Appen - Find events and enjoy</title>\r\n    </Helmet>\r\n    <ScrollToTop />\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}